# Формула наследования от родительского класса, взятие атрибутов родительского класса,
# добавление нового атрибута в дочерний класс


class ClassParent:
    def __init__(self, a, b):  #  __init__ - метод конструктор класса, куда я заношу свои пользовательские атрибуты;
        # self - ссылка на экземпляр класса, позволяет создавать и изменять атрибуты объекта;
        # a, b - параметры конструктора (локальные переменные), которые передаются при создании объекта
        self.attr_par_1 = a  # attr_par_1 - пользовательский атрибут, ему присваивается локальная переменная a
        self.attr_par_2 = b  # attr_par_2 - пользовательский атрибут, ему присваивается локальная переменная b



class ClassChild(ClassParent):
    def __init__(self, c, d, e): #  __init__ - метод конструктор класса, куда я заношу свои пользовательские атрибуты;
        # self - ссылка на экземпляр класса, заглушка;
        # c, d, e - параметры конструктора (локальные переменные)
        super().__init__(c, d)  # тут python делает следующее:
        # 1) ищет родительский класс ClassParent
        # 2) вызывает у ClassParent метод __init__
        # 3) передает в __init__ переменные c и d
        # 4) заполняет атрибуты ClassParent как:
        #     self.attr_par_1 = c
        #     self.attr_par_2 = b
        self.attr_ch_1 = e  # теперь в дочернем классе ClassChild добавляем новый атрибут attr_ch_1