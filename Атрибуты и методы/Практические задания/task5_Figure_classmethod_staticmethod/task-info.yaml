type: theory
files:
  - name: main.py
    visible: true
    placeholders:
      - offset: 99
        length: 344
        placeholder_text: |-
          # TODO сделать методом класса
              def area(self, *args):
                  """
                  Метод, который считает площадь по разным формулам,
                   в зависимости от количества переданных аргументов.
                  """
                  if len(args) == 2:
                      self.area_by_height(*args)
                  if len(args) == 3:
                      self.area_by_angle(*args)
        initial_state:
          length: 330
          offset: 99
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          @classmethod
              def area(cls, *args):
                  """
                  Метод, который считает площадь по разным формулам,
                   в зависимости от количества переданных аргументов.
                  """
                  if len(args) == 2:
                      cls.area_by_height(*args)
                  if len(args) == 3:
                      cls.area_by_angle(*args)
        selected: false
        status: Solved
        is_visible: false
      - offset: 467
        length: 67
        placeholder_text: "def area_by_angle(self, a, b, angle):  # TODO сделать стати\
      ческим методом"
        initial_state:
          length: 73
          offset: 435
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          @staticmethod
              def area_by_angle(a, b, angle):
        selected: false
        status: Solved
        is_visible: false
      - offset: 671
        length: 61
        placeholder_text: "def area_by_height(self, a, h):  # TODO сделать статическим\
      \ методом"
        initial_state:
          length: 67
          offset: 627
        initialized_from_dependency: false
        encrypted_possible_answer: |-
          @staticmethod
              def area_by_height(a, h):
        selected: false
        status: Solved
        is_visible: false
    learner_created: false
  - name: __init__.py
    visible: false
    learner_created: false
  - name: before.py
    visible: true
    learner_created: true
  - name: try.py
    visible: true
    learner_created: true
status: Solved
record: -1
post_submission_on_open: true
